# frozen_string_literal: true
user = job_user.user

columns do
  column do
    panel I18n.t('admin.job_user.show.user_details') do
      h3 link_to("#{user.name} #{"(#{user.city})" if user.city}", admin_user_path(user)) # rubocop:disable Metrics/LineLength

      h3 I18n.t('admin.user.show.tags')
      div do
        content_tag(:p, user_tag_badges(user: user))
      end

      unless user.jobs.ongoing.empty?
        h3 I18n.t('admin.user.show.ongoing_jobs')
        table_for(user.jobs.ongoing) do
          column :name
          column :hours
          column :start { |job| european_date(job.job_date) }
          column :end { |job| european_date(job.job_end_date) }
        end
      end

      unless user.jobs.future.empty?
        h3 I18n.t('admin.user.show.future_jobs')
        table_for(user.jobs.future) do
          column :name
          column :hours
          column :start { |job| european_date(job.job_date) }
          column :end { |job| european_date(job.job_end_date) }
        end
      end
    end
  end

  column do
    panel I18n.t('admin.job_user.show.match_details') do
      table_for(job_user) do
        column :average_score { user.average_score || '-' }
        column :verified { status_tag(user.verified) }
        column :accepted
        column :will_perform
        column :performed
      end
      content_tag(:p) do
        I18n.t(
          'admin.job_user.show.created_at',
          date: datetime_ago_in_words(job_user.created_at)
        )
      end
      content_tag(:p, simple_format(job_user.apply_message)) if job_user.apply_message # rubocop:disable Metrics/LineLength

      h3 I18n.t('admin.user.show.skills')
      div do
        content_tag(:p, user_skills_badges(user_skills: user.user_skills))
      end

      h3 I18n.t('admin.user.show.languages')
      div do
        content_tag(:p, user_languages_badges(user_languages: user.user_languages))
      end

      unless user.interview_comment.blank?
        h3 I18n.t('admin.user.show.interview_comment')
        div do
          content_tag(:p, simple_format(user.interview_comment))
        end
      end
    end
  end
end

panel I18n.t('admin.job_user.show.job_details') do
  table_for(job_user.job) do
    column :name
    column :job_date
    column :job_end_date
    column :hours
    column :gross_amount
  end
end
