# frozen_string_literal: true

confirm_msg = I18n.t('admin.action_confirm')

job = job_user.job

# rubocop:disable Metrics/LineLength
ul do
  li link_to(I18n.t('admin.job_user.actions.accept_and_notify_all'), accept_and_notify_all_admin_job_user_path(job_user), method: :post, data: { confirm: confirm_msg })
  br
  li link_to(I18n.t('admin.job_user.actions.shortlist'), shortlist_admin_job_user_path(job_user), method: :post, data: { confirm: confirm_msg })
  li link_to(I18n.t('admin.job_user.actions.reject'), reject_and_notify_admin_job_user_path(job_user), method: :post, data: { confirm: confirm_msg })
  br
  li link_to(I18n.t('admin.job_user.actions.ask_for_job_information'), update_profile_reminder_notification_admin_job_user_path(job_user), method: :post, data: { confirm: confirm_msg })
  br
  if ff_invoice = job_user.frilans_finans_invoice
    li link_to(ff_invoice.display_name, resource_path(ff_invoice))
  elsif job&.frilans_finans_job? && job_user.will_perform
    li link_to(I18n.t('admin.job_user.actions.create_frilans_finans_invoice'), create_frilans_finans_invoice_admin_job_user_path(job_user), method: :post, data: { confirm: confirm_msg })
  else
    li em(I18n.t('admin.job_user.actions.frilans_finans_create_invalid'))
  end
end

strong link_to(I18n.t('admin.job_user.actions.view_full_details'), admin_job_user_path(job_user, full: true))
# rubocop:enable Metrics/LineLength
